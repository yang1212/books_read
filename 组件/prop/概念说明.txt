1 在vue中，父组件与子组件的关系是prop向下传递，事件向上传递
  父组件通过prop下发数据，子组件通过事件发送消息

2 prop 是单向绑定的：当父组件的属性变化时，将传导给子组件，但是不会反过来。这是为了防止子组件无意修改了父组件的状态。

3 初学者常犯的一个错误是使用字面量语法传递数值
    <comp some-prop="1"></comp>    传递了一个字符串 "1"

    如果想传递一个真正的 JavaScript 数值，则需要使用 v-bind，从而让它的值被当作 JavaScript 表达式计算：
    <comp v-bind:some-prop="1"></comp>    传递真正的数值

4 在两种情况下，我们很容易忍不住想去修改 prop 中数据：
    4.1 Prop 作为初始值传入后，子组件想把它当作局部数据来用；
    4.2 Prop 作为原始数据传入，由子组件处理成其它数据输出。

    对这两种情况，正确的应对方式是：

        (1) 定义一个局部变量，并用 prop 的值初始化它：
         props: ['initialCounter'],
         data: function () {
           return { counter: this.initialCounter }
         }

        (2) 定义一个计算属性，处理 prop 的值并返回：
         props: ['size'],
         computed: {
            normalizedSize: function () {
                 return this.size.trim().toLowerCase()
            }
        }